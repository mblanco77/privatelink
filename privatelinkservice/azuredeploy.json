{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v3",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "diskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "StandardSSD_LRS",
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The Storage type of the data Disks"
            }
        },
        "vmUser": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "username for the Virtual Machine."
            }
        },
        "vmPass": {
            "type": "securestring",
            "defaultValue": "[concat('P1',uniquestring(resourceGroup().id))]",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "autoApproval": {
            "type": "string",
            "defaultValue": "yes",
            "metadata": {
                "description": "use private link auto approval workflow (yes or no)"
            }
        },        
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located."
            },
            "defaultValue": "https://raw.githubusercontent.com/mblanco77/privatelink/master/privatelinkservice"       
        }
    },
    "variables": {
        "vnetProvider": {
            "vnetProviderName": "vnet-provider-001",
            "vnetProviderAddressSpace": "10.0.0.0/24",
            "subnetProvidermDefaultPrefix": "10.0.0.0/25",
            "subnetProvidermDefaultName": "snet-provider-default"
        },
        "vnetConsumer": {
            "vnetConsumerName": "vnet-consumer-001",
            "vnetConsumerAddressSpace": "10.5.0.0/24",
            "subnetConsumerDefaultPrefix": "10.5.0.0/25",
            "subnetConsumerDefaultName": "snet-consumer-default"
        },
        "configuration": {
            "uritemplatenameprovider": "[concat(parameters('_artifactsLocation'),'/nested/provider.json')]",
            "uritemplatenameconsumer": "[concat(parameters('_artifactsLocation'),'/nested/consumer.json')]"
        },
        "loadbalancername" : "lbprovider",
        "backendpoolname": "backendpoolprovider",
        "privatelinkservicename" : "privatelinkservice1",
        "privateEndpointnameConsumer" : "pvtlinkEndPoint",
        "vmProviderName": "[take(concat('vmprovider', uniqueString(resourceGroup().id)),15)]",
        "vmConsumerName": "[take(concat('vmconsumer', uniqueString(resourceGroup().id)),15)]",
        "nicVmProviderName": "[concat(variables('vmProviderName'),'-NetworkInterface')]",
        "nicVmConsumerName": "[concat(variables('vmConsumerName'),'-NetworkInterface')]"
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "providerenviroment",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').uritemplatenameprovider]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vnetProviderName": {
                        "value": "[variables('vnetProvider').vnetProviderName]"
                    },
                    "vnetProviderAddressSpace": {
                        "value": "[variables('vnetProvider').vnetProviderAddressSpace]"
                    },
                    "subnetProviderDefaultPrefix": {
                        "value": "[variables('vnetProvider').subnetProvidermDefaultPrefix]"
                    },
                    "subnetProviderDefaultName": {
                        "value": "[variables('vnetProvider').subnetProvidermDefaultName]"
                    },
                    "loadbalancername": {
                        "value": "[variables('loadbalancername')]"
                    },
                    "backendpoolname": {
                        "value": "[variables('backendpoolname')]"
                    },
                    "vmName": {
                        "value": "[variables('vmProviderName')]"
                    },
                    "nicName": {
                        "value": "[variables('nicVmProviderName')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('virtualMachineSize')]"
                    },
                    "vmUser": {
                        "value": "[parameters('vmUser')]"
                    },
                    "vmpass": {
                        "value": "[parameters('vmPass')]"
                    },
                    "diskType": {
                        "value": "[parameters('diskType')]"
                    },
                    "privatelinkservicename": {
                        "value": "[variables('privatelinkservicename')]"
                    }

                }

            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "consumerenviroment",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "providerenviroment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').uritemplatenameconsumer]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vnetConsumerName": {
                        "value": "[variables('vnetConsumer').vnetConsumerName]"
                    },
                    "vnetConsumeraddressspace": {
                        "value": "[variables('vnetConsumer').vnetConsumeraddressspace]"
                    },
                    "subnetConsumerdefaultprefix": {
                        "value": "[variables('vnetConsumer').subnetConsumerdefaultprefix]"
                    },
                    "subnetConsumerDefaultName": {
                        "value": "[variables('vnetConsumer').subnetConsumerDefaultName]"
                    },
                    "vmName": {
                        "value": "[variables('vmConsumerName')]"
                    },
                    "nicName": {
                        "value": "[variables('nicVmConsumerName')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('virtualMachineSize')]"
                    },
                    "vmUser": {
                        "value": "[parameters('vmUser')]"
                    },
                    "vmpass": {
                        "value": "[parameters('vmPass')]"
                    },
                    "diskType": {
                        "value": "[parameters('diskType')]"
                    },
                    "privateEndpointName": {
                        "value": "[variables('privateEndpointnameConsumer')]"
                    },
                    "privateserviceName": {
                        "value": "[variables('privatelinkservicename')]"
                    },
                    "autoApproval": {
                        "value": "[parameters('autoApproval')]"
                    }                    
                }

            }
        }
    ],
    "outputs": {
        "vmuser": {
            "type": "string",
            "value": "[parameters('vmUser')]"
        },
        "vmpass": {
            "type": "string",
            "value": "[parameters('vmPass')]"
        },
        "vmconsumerurl": {
            "type": "string",
            "value": "[reference('consumerenviroment').outputs.vmdnsurl.value]"
        }

    }
}
